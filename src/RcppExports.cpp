// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// covid19_model_interface
Rcpp::List covid19_model_interface(Rcpp::NumericMatrix input_dist_mat, Rcpp::IntegerVector input_N_pops, Rcpp::IntegerVector input_S_pops, Rcpp::IntegerVector input_E_pops, Rcpp::IntegerVector input_I_asym_pops, Rcpp::IntegerVector input_I_presym_pops, Rcpp::IntegerVector input_I_sym_pops, Rcpp::IntegerVector input_I_home_pops, Rcpp::IntegerVector input_I_hosp_pops, Rcpp::IntegerVector input_I_icu1_pops, Rcpp::IntegerVector input_I_icu2_pops, Rcpp::IntegerVector input_R_pops, Rcpp::IntegerVector input_D_pops, Rcpp::List input_tw, Rcpp::IntegerVector input_realz_seeds, Rcpp::NumericVector input_census_area, double stoch_sd, int trans_type, double dd_trans_monod_k, double frac_beta_asym, double frac_beta_hosp, double delta, double recov_a, double recov_p, double recov_s, double recov_home, double recov_icu1, double recov_icu2, double asym_rate, double sym_to_icu_rate);
RcppExport SEXP _SPARSEMODr_covid19_model_interface(SEXP input_dist_matSEXP, SEXP input_N_popsSEXP, SEXP input_S_popsSEXP, SEXP input_E_popsSEXP, SEXP input_I_asym_popsSEXP, SEXP input_I_presym_popsSEXP, SEXP input_I_sym_popsSEXP, SEXP input_I_home_popsSEXP, SEXP input_I_hosp_popsSEXP, SEXP input_I_icu1_popsSEXP, SEXP input_I_icu2_popsSEXP, SEXP input_R_popsSEXP, SEXP input_D_popsSEXP, SEXP input_twSEXP, SEXP input_realz_seedsSEXP, SEXP input_census_areaSEXP, SEXP stoch_sdSEXP, SEXP trans_typeSEXP, SEXP dd_trans_monod_kSEXP, SEXP frac_beta_asymSEXP, SEXP frac_beta_hospSEXP, SEXP deltaSEXP, SEXP recov_aSEXP, SEXP recov_pSEXP, SEXP recov_sSEXP, SEXP recov_homeSEXP, SEXP recov_icu1SEXP, SEXP recov_icu2SEXP, SEXP asym_rateSEXP, SEXP sym_to_icu_rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type input_dist_mat(input_dist_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_N_pops(input_N_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_S_pops(input_S_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_E_pops(input_E_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_I_asym_pops(input_I_asym_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_I_presym_pops(input_I_presym_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_I_sym_pops(input_I_sym_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_I_home_pops(input_I_home_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_I_hosp_pops(input_I_hosp_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_I_icu1_pops(input_I_icu1_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_I_icu2_pops(input_I_icu2_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_R_pops(input_R_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_D_pops(input_D_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type input_tw(input_twSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_realz_seeds(input_realz_seedsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type input_census_area(input_census_areaSEXP);
    Rcpp::traits::input_parameter< double >::type stoch_sd(stoch_sdSEXP);
    Rcpp::traits::input_parameter< int >::type trans_type(trans_typeSEXP);
    Rcpp::traits::input_parameter< double >::type dd_trans_monod_k(dd_trans_monod_kSEXP);
    Rcpp::traits::input_parameter< double >::type frac_beta_asym(frac_beta_asymSEXP);
    Rcpp::traits::input_parameter< double >::type frac_beta_hosp(frac_beta_hospSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type recov_a(recov_aSEXP);
    Rcpp::traits::input_parameter< double >::type recov_p(recov_pSEXP);
    Rcpp::traits::input_parameter< double >::type recov_s(recov_sSEXP);
    Rcpp::traits::input_parameter< double >::type recov_home(recov_homeSEXP);
    Rcpp::traits::input_parameter< double >::type recov_icu1(recov_icu1SEXP);
    Rcpp::traits::input_parameter< double >::type recov_icu2(recov_icu2SEXP);
    Rcpp::traits::input_parameter< double >::type asym_rate(asym_rateSEXP);
    Rcpp::traits::input_parameter< double >::type sym_to_icu_rate(sym_to_icu_rateSEXP);
    rcpp_result_gen = Rcpp::wrap(covid19_model_interface(input_dist_mat, input_N_pops, input_S_pops, input_E_pops, input_I_asym_pops, input_I_presym_pops, input_I_sym_pops, input_I_home_pops, input_I_hosp_pops, input_I_icu1_pops, input_I_icu2_pops, input_R_pops, input_D_pops, input_tw, input_realz_seeds, input_census_area, stoch_sd, trans_type, dd_trans_monod_k, frac_beta_asym, frac_beta_hosp, delta, recov_a, recov_p, recov_s, recov_home, recov_icu1, recov_icu2, asym_rate, sym_to_icu_rate));
    return rcpp_result_gen;
END_RCPP
}
// seir_model_interface
Rcpp::List seir_model_interface(Rcpp::NumericMatrix input_dist_mat, Rcpp::IntegerVector input_N_pops, Rcpp::IntegerVector input_S_pops, Rcpp::IntegerVector input_E_pops, Rcpp::IntegerVector input_I_pops, Rcpp::IntegerVector input_R_pops, Rcpp::List input_tw, Rcpp::IntegerVector input_realz_seeds, Rcpp::NumericVector input_census_area, double stoch_sd, int trans_type, double dd_trans_monod_k, double birth, double incubate, double recov);
RcppExport SEXP _SPARSEMODr_seir_model_interface(SEXP input_dist_matSEXP, SEXP input_N_popsSEXP, SEXP input_S_popsSEXP, SEXP input_E_popsSEXP, SEXP input_I_popsSEXP, SEXP input_R_popsSEXP, SEXP input_twSEXP, SEXP input_realz_seedsSEXP, SEXP input_census_areaSEXP, SEXP stoch_sdSEXP, SEXP trans_typeSEXP, SEXP dd_trans_monod_kSEXP, SEXP birthSEXP, SEXP incubateSEXP, SEXP recovSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type input_dist_mat(input_dist_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_N_pops(input_N_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_S_pops(input_S_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_E_pops(input_E_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_I_pops(input_I_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_R_pops(input_R_popsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type input_tw(input_twSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type input_realz_seeds(input_realz_seedsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type input_census_area(input_census_areaSEXP);
    Rcpp::traits::input_parameter< double >::type stoch_sd(stoch_sdSEXP);
    Rcpp::traits::input_parameter< int >::type trans_type(trans_typeSEXP);
    Rcpp::traits::input_parameter< double >::type dd_trans_monod_k(dd_trans_monod_kSEXP);
    Rcpp::traits::input_parameter< double >::type birth(birthSEXP);
    Rcpp::traits::input_parameter< double >::type incubate(incubateSEXP);
    Rcpp::traits::input_parameter< double >::type recov(recovSEXP);
    rcpp_result_gen = Rcpp::wrap(seir_model_interface(input_dist_mat, input_N_pops, input_S_pops, input_E_pops, input_I_pops, input_R_pops, input_tw, input_realz_seeds, input_census_area, stoch_sd, trans_type, dd_trans_monod_k, birth, incubate, recov));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SPARSEMODr_covid19_model_interface", (DL_FUNC) &_SPARSEMODr_covid19_model_interface, 30},
    {"_SPARSEMODr_seir_model_interface", (DL_FUNC) &_SPARSEMODr_seir_model_interface, 15},
    {NULL, NULL, 0}
};

RcppExport void R_init_SPARSEMODr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
